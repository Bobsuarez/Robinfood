# Default values for project.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 853324821382.dkr.ecr.us-east-1.amazonaws.com/customers-bc-third-parties
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.0.0

healthCheck:
  enabled: false
  path: /actuator/health

#imagePullSecrets: []
nameOverride: "dev-customers-bc-third-parties-app"
fullnameOverride: "dev-customers-bc-third-parties-chart"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  #  annotations:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "dev-customers-bc-third-parties"

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: NodePort
  port: 8080

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:853324821382:certificate/743a7866-5de6-4ef6-a013-e71707918c93
    alb.ingress.kubernetes.io/group.name: ingress-controller
    alb.ingress.kubernetes.io/subnets: subnet-036f1048c0e4f8b54,subnet-03df29f1eb8ea5459,subnet-0b8a01c30be810ce6
    alb.ingress.kubernetes.io/security-groups: sg-06cbfe5f9cde3fc7c
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_200"}}'
    alb.ingress.kubernetes.io/healthcheck-path: '/actuator/health'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '200'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '120'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/success-codes: '200'
  hosts:
    - host: dev-customers-bc-third-parties.rf-dev.com
      paths:
        - path: /
          pathType: Prefix

resources:
  requests:
    cpu: 100m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1024Mi

redis:
  enabled: false

filebeatImage: 853324821382.dkr.ecr.us-east-1.amazonaws.com/filebeat:7.16.3-arm64

env:
  - name: "SQUAD"
    value: "ce"
  - name: "ENVIRONMENT"
    value: "dev"
  - name: "LOGSTASH_HOSTS"
    value: "logstash-logstash.devops.svc.cluster.local"
  - name: "PIPELINE"
    value: "ecs-pipeline"
  - name: "APP"
    value: "customers-bc-third-parties"
  - name: "JAVA_OPTS"
    value: "-Xms512m -Xmx896m -XX:MaxMetaspaceSize=128m -XX:NewRatio=2"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
  kube/nodetype: autogestion-arm

tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "app"
    effect: "NoSchedule"

affinity: {}

persistence:
  enabled: true
  accessMode: ReadWriteMany
  size: 50Gi
  storageClassName: efs-logs
