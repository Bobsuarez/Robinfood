package com.robinfood.app.controllers.orders;

import static com.robinfood.core.constants.APIConstants.ORDERS_V1;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.robinfood.app.mocks.ChangeStatusOrdersRequestDTOMocks;
import com.robinfood.app.usecases.changestatusorders.IChangeOrdersStatusUseCase;
import com.robinfood.core.dtos.apiresponsebuilder.AbstractBuilderApiResponseDTO;
import com.robinfood.core.dtos.apiresponsebuilder.OkApiResponseDTO;
import com.robinfood.core.dtos.changestatusordersrequestdto.ChangeStatusOrdersRequestDTO;
import com.robinfood.core.extensions.ObjectExtensions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.json.JacksonTester;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

@ExtendWith(MockitoExtension.class)
class OrdersControllerTest {

    private static final String BEARER_AUTH = "Bearer ";
    private static final String TOKEN = "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhbmRyb2lkLnYxIiwianRpIjoiNEEyMDc5MkUtODA4NS00QzAyLTg4RDgtQzc2ODc0RDBENjE3Iiwic3ViIjoiMTIzNDU2NyIsIm5hbWUiOiJKb2huIERvZSIsImlhdCI6MTUxNjIzOTAyMiwiZXhwIjoyMDE2MjM5MDIyLCJhdWQiOiJpbnRlcm5hbCIsIm1vZCI6WyJvcmNoX21lbnUiLCJvcmNoX29yZGVyIiwibWVudV9iYXNlIiwiTUVOVV9ESVNDT1VOVFNfU0VSVklDRVMiLCJjYW1wYWlnbiIsImNyaXRlcmlhIiwiY3JpdGVyaWFfb3BlcmF0b3JzIiwiZGlzY291bnQiLCJkaXNjb3VudF90eXBlIiwiZW50aXR5IiwiZW50aXR5X3J1bGUiLCJydWxlIiwicHJvZHVjdF9kaXNwbGF5cyIsImJyYW5kcyIsImNhdGVnb3JpZXMiLCJjb3VudHJpZXMiLCJmbG93cyIsImhvbGlkYXlzIiwibWVudXMiLCJtZW51X3Byb2R1Y3RfdHlwZXMiLCJtZW51X3R5cGVzIiwic3RvcmVfbWVudXMiLCJzdG9yZV9tZW51X3NjaGVkdWxlcyIsIm1lbnVfcHJvbW90aW9ucyIsIm9yZGVyQ3JlYXRpb24iLCJvcmRlckJjIiwicG9zIiwib3JkZXJzIiwidGF4ZXNCYyJdLCJwZXIiOlsib3JjaF9tZW51X3NlcnZpY2VzIiwibWVudV9iYXNlX3NlcnZpY2VzIiwib3JjaF9vcmRlcl92YWxpZGF0ZV9vcmRlciIsIk1FTlVfRElTQ09VTlRTX1NFUlZJQ0VTIiwibWVudV9hZG1pbl9saXN0X3Byb2R1Y3RfZGlzcGxheXMiLCJtZW51X2FkbWluX2NyZWF0ZV9wcm9kdWN0X2Rpc3BsYXlzIiwibWVudV9hZG1pbl91cGRhdGVfcHJvZHVjdF9kaXNwbGF5cyIsIm1lbnVfYWRtaW5fZGVsZXRlX3Byb2R1Y3RfZGlzcGxheXMiLCJtZW51X2FkbWluX2xpc3RfYnJhbmRzIiwibWVudV9hZG1pbl9jcmVhdGVfYnJhbmRzIiwibWVudV9hZG1pbl9jcmVhdGVfYnJhbmRzIiwibWVudV9hZG1pbl91cGRhdGVfYnJhbmRzIiwibWVudV9hZG1pbl9kZWxldGVfYnJhbmRzIiwibWVudV9hZG1pbl9saXN0X2NhdGVnb3JpZXMiLCJtZW51X2FkbWluX2NyZWF0ZV9jYXRlZ29yaWVzIiwibWVudV9hZG1pbl91cGRhdGVfY2F0ZWdvcmllcyIsIm1lbnVfYWRtaW5fZGVsZXRlX2NhdGVnb3JpZXMiLCJtZW51X2FkbWluX2xpc3RfY291bnRyaWVzIiwibWVudV9hZG1pbl9saXN0X2Zsb3dzIiwibWVudV9hZG1pbl9jcmVhdGVfZmxvd3MiLCJtZW51X2FkbWluX3VwZGF0ZV9mbG93cyIsIm1lbnVfYWRtaW5fZGVsZXRlX2Zsb3dzIiwibWVudV9hZG1pbl9jcmVhdGVfaG9saWRheXMiLCJtZW51X2FkbWluX3VwZGF0ZV9ob2xpZGF5cyIsIm1lbnVfYWRtaW5fZGVsZXRlX2hvbGlkYXlzIiwibWVudV9hZG1pbl9saXN0X2hvbGlkYXlzIiwibWVudV9hZG1pbl9saXN0X21lbnVzIiwibWVudV9hZG1pbl9jcmVhdGVfbWVudXMiLCJtZW51X2FkbWluX3VwZGF0ZV9tZW51cyIsIm1lbnVfYWRtaW5fZGVsZXRlX21lbnVzIiwibWVudV9hZG1pbl9saXN0X21lbnVfcHJvZHVjdF90eXBlcyIsIm1lbnVfYWRtaW5fY3JlYXRlX21lbnVfcHJvZHVjdF90eXBlcyIsIm1lbnVfYWRtaW5fdXBkYXRlX21lbnVfcHJvZHVjdF90eXBlcyIsIm1lbnVfYWRtaW5fZGVsZXRlX21lbnVfcHJvZHVjdF90eXBlcyIsIm1lbnVfYWRtaW5fbGlzdF9tZW51X3Byb21vdGlvbnMiLCJtZW51X2FkbWluX2NyZWF0ZV9tZW51X3Byb21vdGlvbnMiLCJtZW51X2FkbWluX3VwZGF0ZV9tZW51X3Byb21vdGlvbnMiLCJtZW51X2FkbWluX2RlbGV0ZV9tZW51X3Byb21vdGlvbnMiLCJtZW51X2FkbWluX2xpc3RfbWVudV90eXBlcyIsIm1lbnVfYWRtaW5fY3JlYXRlX21lbnVfdHlwZXMiLCJtZW51X2FkbWluX3VwZGF0ZV9tZW51X3R5cGVzIiwibWVudV9hZG1pbl9kZWxldGVfbWVudV90eXBlcyIsIm1lbnVfYWRtaW5fbGlzdF9zdG9yZV9tZW51cyIsIm1lbnVfYWRtaW5fbGlzdF9zY2hlZHVsZXNfc3RvcmVfbWVudXMiLCJtZW51X2FkbWluX2NyZWF0ZV9zdG9yZV9tZW51cyIsIm1lbnVfYWRtaW5fZGVsZXRlX3N0b3JlX21lbnVzIiwibWVudV9hZG1pbl9saXN0X3N0b3JlX21lbnVfc2NoZWR1bGVzIiwibWVudV9hZG1pbl9jcmVhdGVfc3RvcmVfbWVudV9zY2hlZHVsZXMiLCJtZW51X2FkbWluX3VwZGF0ZV9zdG9yZV9tZW51X3NjaGVkdWxlcyIsIm1lbnVfYWRtaW5fZGVsZXRlX3N0b3JlX21lbnVfc2NoZWR1bGVzIiwibWVudV9hZG1pbl9saXN0X2RheXMiLCJtZW51X2FkbWluX2NyZWF0ZV9kYXlzIiwibWVudV9hZG1pbl91cGRhdGVfZGF5cyIsIm1lbnVfYWRtaW5fZGVsZXRlX2RheXMiLCJESVNDT1VOVF9DUkVBVEVfUlVMRSIsIkRJU0NPVU5UX1VQREFURV9SVUxFIiwiRElTQ09VTlRfREVMRVRFX1JVTEUiLCJESVNDT1VOVF9MSVNUX1JVTEVTIiwiRElTQ09VTlRfQ1JFQVRFX0VOVElUWV9SVUxFIiwiRElTQ09VTlRfVVBEQVRFX0VOVElUWV9SVUxFIiwiRElTQ09VTlRfREVMRVRFX0VOVElUWV9SVUxFIiwiRElTQ09VTlRfTElTVF9FTlRJVElFUyIsIkRJU0NPVU5UX0xJU1RfRElTQ09VTlRfVFlQRVMiLCJESVNDT1VOVF9MSVNUX0RJU0NPVU5UUyIsIkRJU0NPVU5UX0xJU1RfRU5USVRZX1JVTEVTX0JZX0RJU0NPVU5UIiwiRElTQ09VTlRfQ1JFQVRFX0RJU0NPVU5UIiwiRElTQ09VTlRfVVBEQVRFX0RJU0NPVU5UIiwiRElTQ09VTlRfREVMRVRFX0RJU0NPVU5UIiwiRElTQ09VTlRfTElTVF9DUklURVJJQV9PUEVSQVRPUlMiLCJESVNDT1VOVF9MSVNUX0NSSVRFUklBIiwiRElTQ09VTlRfQ1JFQVRFX0NSSVRFUklBIiwiRElTQ09VTlRfVVBEQVRFX0NSSVRFUklBIiwiRElTQ09VTlRfREVMRVRFX0NSSVRFUklBIiwiRElTQ09VTlRfTElTVF9DQU1QQUlHTlMiLCJESVNDT1VOVF9MSVNUX0RJU0NPVU5UU19CWV9DQU1QQUlHTiIsIkRJU0NPVU5UX0NSRUFURV9DQU1QQUlHTiIsIkRJU0NPVU5UX1VQREFURV9DQU1QQUlHTiIsIkRJU0NPVU5UX0RFTEVURV9DQU1QQUlHTiIsIm1lbnVfYWRtaW5fY3JlYXRlX21lbnVfcHJvbW90aW9uc19hcnRpY2xlIiwibWVudV9hZG1pbl91cGRhdGVfbWVudV9wcm9tb3Rpb25zX2FydGljbGUiLCJtZW51X2FkbWluX2NyZWF0ZV9tZW51X3Byb2R1Y3RzIiwibWVudV9hZG1pbl91cGRhdGVfbWVudV9wcm9kdWN0cyIsIm1lbnVfYWRtaW5fZGVsZXRlX21lbnVfcHJvZHVjdHMiLCJtZW51X2FkbWluX2xpc3RfbWVudV9wcm9kdWN0cyIsImNoZWNrVXNlckRhdGEiLCJjaGVja0NvbXBhbnlEYXRhIiwicG9zX2NyZWF0ZV9vcmRlciIsIm9yZGVyc19yZWplY3Rfb3JkZXIiLCJsb3lhbHR5X3RyYW5zYWN0aW9uX2NyZWRpdHMiLCJUQVhFU19CQ19MSVNUX0lURU1fVEFYIl0sInVzZXIiOnsidXNlcl9pZCI6MTIzNDU2NywiZW1haWwiOiJqb2huZG9lQG15Y29tcGFueS5jb20iLCJjb3VudHJ5X2lkIjoxLCJjb21wYW55X2lkIjoxLCJmaXJzdF9uYW1lIjoiSmhvbiIsImxhc3RfbmFtZSI6IkRvZSIsInBob25lIjoiNTU1LTYzODMwMjIiLCJtZXRhZGF0YSI6eyJzdG9yZV9pZCI6NX19fQ.phTrxSTQfFv3I5jSDpwJ1m3dHQsyNiSw-2ci5yCAdq0mfaSTdswEGyTjrSBjQI73lHcQulbo2ENtyEfPGSIVJA";

    private MockMvc mockMvc;

    @Mock
    private IChangeOrdersStatusUseCase mockChangeStatusOrdersUseCase;

    @InjectMocks
    private OrderController controller;

    final ChangeStatusOrdersRequestDTO changeStatusOrdersRequestDTO = new ChangeStatusOrdersRequestDTOMocks()
        .changeStatusOrdersRequestDTO;

    @BeforeEach
    void setUp() {
        JacksonTester.initFields(this, new ObjectMapper());
        mockMvc = MockMvcBuilders.standaloneSetup(controller)
            .build();
    }

    @Test
    void test_Change_Orders_Status() throws Exception {
        when(mockChangeStatusOrdersUseCase.invoke(changeStatusOrdersRequestDTO))
            .thenReturn(Boolean.TRUE);

        final AbstractBuilderApiResponseDTO<Boolean> apiResponseDTOBuilder = new OkApiResponseDTO<>();
        apiResponseDTOBuilder.build("Change status success");

        mockMvc.perform(MockMvcRequestBuilders
                .post(ORDERS_V1 + "/update/status")
                .content(ObjectExtensions.toJson(changeStatusOrdersRequestDTO))
                .header(HttpHeaders.AUTHORIZATION, BEARER_AUTH + TOKEN)
                .contentType(MediaType.APPLICATION_JSON)
                .accept(MediaType.APPLICATION_JSON))
            .andExpect(status().isOk())
            .andExpect(
                content().json(ObjectExtensions.toJson(apiResponseDTOBuilder.getApiResponseDTO())));
    }
}
