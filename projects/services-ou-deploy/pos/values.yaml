orderbc:
  replicaCount: 1
  image:
    repository: 824759482132.dkr.ecr.us-east-1.amazonaws.com/order-bc
    pullPolicy: Always
    tag: 1.0.4
  healthCheck:
    enabled: true
    path: /actuator/health
  nameOverride: order-bc-app
  fullnameOverride: order-bc-chart
  serviceAccount:
    create: true
    annotations: {}
    name: order-bc
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080

  ingress:
    enabled: true
    className: "alb"
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:824759482132:certificate/16948918-5a62-4392-8381-fb409368b617
      alb.ingress.kubernetes.io/group.name: ingress-controller
      alb.ingress.kubernetes.io/subnets: subnet-0c502dbd43f538994,subnet-05d34db16b2fdc96b,subnet-08417980fc05538af
      alb.ingress.kubernetes.io/security-groups: sg-02de400e0c364e8e7,sg-0401db4307d77f13a
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_200"}}'
      alb.ingress.kubernetes.io/healthcheck-path: '/actuator/health' 
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '200'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '120'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
      alb.ingress.kubernetes.io/success-codes: '200'
    hosts:
      - host: pos-order-bc.muy.com.co 
        paths:
          - path: /
            pathType: Prefix

  resources:
    requests:
      cpu: 200m
      memory: 768Mi
    limits:
      cpu: 2000m
      memory: 2048Mi
  redis:
    enabled: false
  filebeatImage: 824759482132.dkr.ecr.us-east-1.amazonaws.com/filebeat:7.16.3-arm64-v6kafka
  filebeatEnv:
  - name: SQUAD
    value: cai
  - name: ENVIRONMENT
    value: prod
  - name: APP
    value: order-bc-pos

  appEnv:
  - name: APP
    value: order-bc-pos
  - name: MQ-SUFFIX
    value: orders-ou
  - name: JAVA_OPTS
    value: -Xmx1536m
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    threshold: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 70
    metricName: nginx_ingress_controller_requests
    prometheusUrl: http://prometheus-server.prometheus.svc.cluster.local:80
  nodeSelector:
    kube/nodetype: pos-arm
  tolerations:
  - key: dedicated
    operator: Equal
    value: app
    effect: NoSchedule
  affinity: {}
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 50Gi
    storageClassName: efs-logs
ordercreation:
  replicaCount: 1
  image:
    repository: 824759482132.dkr.ecr.us-east-1.amazonaws.com/order-creation
    pullPolicy: Always
    tag: 1.1.1
  healthCheck:
    enabled: true
    path: /actuator/health
  nameOverride: order-creation-app
  fullnameOverride: order-creation-chart
  serviceAccount:
    create: true
    annotations: {}
    name: order-creation
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080

  ingress:
    enabled: true
    className: "alb"
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:824759482132:certificate/16948918-5a62-4392-8381-fb409368b617
      alb.ingress.kubernetes.io/group.name: ingress-controller
      alb.ingress.kubernetes.io/subnets: subnet-0c502dbd43f538994,subnet-05d34db16b2fdc96b,subnet-08417980fc05538af
      alb.ingress.kubernetes.io/security-groups: sg-02de400e0c364e8e7,sg-0401db4307d77f13a
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_200"}}'
      alb.ingress.kubernetes.io/healthcheck-path: '/actuator/health' 
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '200'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '120'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
      alb.ingress.kubernetes.io/success-codes: '200'
    hosts:
      - host: pos-order-creation.muy.com.co 
        paths:
          - path: /
            pathType: Prefix

  resources:
    requests:
      cpu: 200m
      memory: 768Mi
    limits:
      cpu: 2000m
      memory: 2048Mi
  redis:
    enabled: false
  filebeatImage: 824759482132.dkr.ecr.us-east-1.amazonaws.com/filebeat:7.16.3-arm64-v6kafka
  filebeatEnv:
  - name: SQUAD
    value: cai
  - name: ENVIRONMENT
    value: prod
  - name: APP
    value: order-creation-pos

  appEnv:
  - name: APP
    value: order-creation-pos
  - name: MQ-SUFFIX
    value: orders-ou
  - name: JAVA_OPTS
    value: -Xmx1536m
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 70
  nodeSelector:
    kube/nodetype: pos-arm
  tolerations:
  - key: dedicated
    operator: Equal
    value: app
    effect: NoSchedule
  affinity: {}
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 50Gi
    storageClassName: efs-logs
taxesbc:
  replicaCount: 1
  image:
    repository: 824759482132.dkr.ecr.us-east-1.amazonaws.com/taxes-bc
    pullPolicy: Always
    tag: 1.0.1
  healthCheck:
    enabled: true
    path: /api/actuator/health
  nameOverride: taxes-bc-app
  fullnameOverride: taxes-bc-chart
  serviceAccount:
    create: true
    annotations: {}
    name: taxes-bc
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080

  ingress:
    enabled: true
    className: "alb"
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:824759482132:certificate/16948918-5a62-4392-8381-fb409368b617
      alb.ingress.kubernetes.io/group.name: ingress-controller
      alb.ingress.kubernetes.io/subnets: subnet-0c502dbd43f538994,subnet-05d34db16b2fdc96b,subnet-08417980fc05538af
      alb.ingress.kubernetes.io/security-groups: sg-02de400e0c364e8e7,sg-0401db4307d77f13a
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_200"}}'
      alb.ingress.kubernetes.io/healthcheck-path: '/actuator/health' 
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '200'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '120'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
      alb.ingress.kubernetes.io/success-codes: '200'
    hosts:
      - host: pos-taxes-bc.muy.com.co 
        paths:
          - path: /
            pathType: Prefix


  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 768Mi
  redis:
    enabled: false
  filebeatImage: 824759482132.dkr.ecr.us-east-1.amazonaws.com/filebeat:7.16.3-arm64-v6kafka
  filebeatEnv:
  - name: SQUAD
    value: cai
  - name: ENVIRONMENT
    value: prod
  - name: APP
    value: taxes-bc-pos

  appEnv:
  - name: APP
    value: taxes-bc-pos
  - name: JAVA_OPTS
    value: -Xmx768m
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    threshold: 10
    metricName: nginx_ingress_controller_requests
    prometheusUrl: http://prometheus-server.prometheus.svc.cluster.local:80
  nodeSelector:
    kube/nodetype: pos-arm
  tolerations:
  - key: dedicated
    operator: Equal
    value: app
    effect: NoSchedule
  affinity: {}
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 50Gi
    storageClassName: efs-logs
ordercreationqueries:
  replicaCount: 1
  image:
    repository: 824759482132.dkr.ecr.us-east-1.amazonaws.com/order-creation-queries
    pullPolicy: Always
    tag: 1.1.4
  healthCheck:
    enabled: true
    path: /actuator/health
  nameOverride: order-creation-queries-app
  fullnameOverride: order-creation-queries-chart
  serviceAccount:
    create: true
    annotations: {}
    name: order-creation-queries
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080

  ingress:
    enabled: true
    className: "alb"
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:824759482132:certificate/16948918-5a62-4392-8381-fb409368b617
      alb.ingress.kubernetes.io/group.name: ingress-controller
      alb.ingress.kubernetes.io/subnets: subnet-0c502dbd43f538994,subnet-05d34db16b2fdc96b,subnet-08417980fc05538af
      alb.ingress.kubernetes.io/security-groups: sg-02de400e0c364e8e7,sg-0401db4307d77f13a
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_200"}}'
      alb.ingress.kubernetes.io/healthcheck-path: '/actuator/health' 
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '200'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '120'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
      alb.ingress.kubernetes.io/success-codes: '200'
    hosts:
      - host: pos-order-creation-queries.muy.com.co 
        paths:
          - path: /
            pathType: Prefix


  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 600m
      memory: 768Mi
  redis:
    enabled: false
  filebeatImage: 824759482132.dkr.ecr.us-east-1.amazonaws.com/filebeat:7.16.3-arm64-v6kafka
  filebeatEnv:
  - name: SQUAD
    value: cai
  - name: ENVIRONMENT
    value: prod
  - name: APP
    value: order-creation-queries-pos

  appEnv:
  - name: APP
    value: order-creation-queries-pos
  - name: JAVA_OPTS
    value: -Xmx768m
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    threshold: 5
    metricName: nginx_ingress_controller_requests
    prometheusUrl: http://prometheus-server.prometheus.svc.cluster.local:80
  nodeSelector:
    kube/nodetype: pos-arm
  tolerations:
  - key: dedicated
    operator: Equal
    value: app
    effect: NoSchedule
  affinity: {}
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 50Gi
    storageClassName: efs-logs
orderorlocalserver:
  replicaCount: 1
  image:
    repository: 824759482132.dkr.ecr.us-east-1.amazonaws.com/order-or-localserver
    pullPolicy: Always
    tag: 2.0.3
  healthCheck:
    enabled: true
    path: /actuator/health
  nameOverride: order-or-localserver-ou-app
  fullnameOverride: order-or-localserver-ou-chart
  serviceAccount:
    create: true
    annotations: {}
    name: pos-order-or-localserver
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080

  ingress:
    enabled: true
    className: "alb"
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:824759482132:certificate/16948918-5a62-4392-8381-fb409368b617
      alb.ingress.kubernetes.io/group.name: ingress-controller
      alb.ingress.kubernetes.io/subnets: subnet-0c502dbd43f538994,subnet-05d34db16b2fdc96b,subnet-08417980fc05538af
      alb.ingress.kubernetes.io/security-groups: sg-02de400e0c364e8e7,sg-0401db4307d77f13a
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_200"}}'
      alb.ingress.kubernetes.io/healthcheck-path: '/actuator/health' 
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: '200'
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '120'
      alb.ingress.kubernetes.io/healthy-threshold-count: '2'
      alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
      alb.ingress.kubernetes.io/success-codes: '200'
    hosts:
      - host: pos-order-or-localserver.muy.com.co 
        paths:
          - path: /
            pathType: Prefix


  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  redis:
    enabled: false
  filebeatImage: 824759482132.dkr.ecr.us-east-1.amazonaws.com/filebeat:7.16.3-arm64-v6kafka
  filebeatEnv:
  - name: SQUAD
    value: cai
  - name: ENVIRONMENT
    value: prod
  - name: APP
    value: order-or-localserver-pos

  appEnv:
  - name: APP
    value: order-or-localserver-pos
  - name: MQ-SUFFIX
    value: orders-ou
  - name: JAVA_OPTS
    value: -Xmx768m
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 80
  nodeSelector:
    kube/nodetype: pos-arm
  tolerations:
  - key: dedicated
    operator: Equal
    value: app
    effect: NoSchedule
  affinity: {}
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 50Gi
    storageClassName: efs-logs
